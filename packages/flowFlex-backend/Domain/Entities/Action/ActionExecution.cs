using System.ComponentModel.DataAnnotations;
using FlowFlex.Domain.Entities.Base;
using SqlSugar;
using Newtonsoft.Json;
using FlowFlex.Domain.Shared.JsonConverters;
using Newtonsoft.Json.Linq;

namespace FlowFlex.Domain.Entities.Action
{
    /// <summary>
    /// Action Execution Entity - Record execution history and results of each Action
    /// </summary>
    [SugarTable("ff_action_executions")]
    public class ActionExecution : EntityBaseCreateInfo
    {
        /// <summary>
        /// Associated ActionDefinition ID
        /// </summary>
        [Required]
        [SugarColumn(ColumnName = "action_definition_id")]
        [JsonConverter(typeof(LongToStringConverter))]
        public long ActionDefinitionId { get; set; }

        /// <summary>
        /// Execution ID (unique identifier generated by business layer)
        /// </summary>
        [Required]
        [StringLength(100)]
        [SugarColumn(ColumnName = "execution_id")]
        public string ExecutionId { get; set; } = string.Empty;

        /// <summary>
        /// Associated ActionTriggerMapping ID (optional, for traceability)
        /// </summary>
        [SugarColumn(ColumnName = "action_trigger_mapping_id")]
        [JsonConverter(typeof(LongToStringConverter))]
        public long? ActionTriggerMappingId { get; set; }

        /// <summary>
        /// Action name (redundant field for easier querying)
        /// </summary>
        [Required]
        [StringLength(100)]
        [SugarColumn(ColumnName = "action_name")]
        public string ActionName { get; set; } = string.Empty;

        /// <summary>
        /// Action type (redundant field for easier querying)
        /// </summary>
        [Required]
        [StringLength(50)]
        [SugarColumn(ColumnName = "action_type")]
        public string ActionType { get; set; } = string.Empty;

        /// <summary>
        /// Trigger context data (JSON format, contains relevant data at trigger time)
        /// </summary>
        [SugarColumn(ColumnName = "trigger_context", ColumnDataType = "jsonb", IsJson = true)]
        public JObject TriggerContext { get; set; } = new JObject();

        /// <summary>
        /// Execution status (Pending, Running, Success, Failed, Cancelled)
        /// </summary>
        [Required]
        [StringLength(20)]
        [SugarColumn(ColumnName = "execution_status")]
        public string ExecutionStatus { get; set; } = "Pending";

        /// <summary>
        /// Execution start time
        /// </summary>
        [SugarColumn(ColumnName = "started_at")]
        public DateTimeOffset? StartedAt { get; set; }

        /// <summary>
        /// Execution completion time
        /// </summary>
        [SugarColumn(ColumnName = "completed_at")]
        public DateTimeOffset? CompletedAt { get; set; }

        /// <summary>
        /// Execution duration in milliseconds
        /// </summary>
        [SugarColumn(ColumnName = "duration_ms")]
        public long? DurationMs { get; set; }

        /// <summary>
        /// Execution input parameters (JSON format)
        /// </summary>
        [SugarColumn(ColumnName = "execution_input", ColumnDataType = "jsonb", IsJson = true)]
        public JObject ExecutionInput { get; set; } = new JObject();

        /// <summary>
        /// Execution output result (JSON format)
        /// </summary>
        [SugarColumn(ColumnName = "execution_output", ColumnDataType = "jsonb", IsJson = true)]
        public JObject ExecutionOutput { get; set; } = new JObject();

        /// <summary>
        /// Error message
        /// </summary>
        [StringLength(2000)]
        [SugarColumn(ColumnName = "error_message")]
        public string ErrorMessage { get; set; } = string.Empty;

        /// <summary>
        /// Error stack trace
        /// </summary>
        [SugarColumn(ColumnName = "error_stack_trace", ColumnDataType = "text")]
        public string ErrorStackTrace { get; set; } = string.Empty;

        /// <summary>
        /// Executor instance information (JSON format, records executor related information)
        /// </summary>
        [SugarColumn(ColumnName = "executor_info", ColumnDataType = "jsonb", IsJson = true)]
        public JObject ExecutorInfo { get; set; } = new JObject();
    }
} 