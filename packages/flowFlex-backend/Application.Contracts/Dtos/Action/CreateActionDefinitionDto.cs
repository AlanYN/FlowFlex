using System.ComponentModel.DataAnnotations;
using FlowFlex.Domain.Shared.Enums.Action;

namespace FlowFlex.Application.Contracts.Dtos.Action
{
    /// <summary>
    /// DTO for creating new action definition
    /// </summary>
    public class CreateActionDefinitionDto
    {
        /// <summary>
        /// Action name
        /// </summary>
        [Required]
        [StringLength(100)]
        public string Name { get; set; }

        /// <summary>
        /// Action description
        /// </summary>
        [StringLength(500)]
        public string Description { get; set; }

        /// <summary>
        /// Action type
        /// </summary>
        [Required]
        public ActionTypeEnum ActionType { get; set; }

        /// <summary>
        /// Action configuration (JSON format)
        /// </summary>
        [Required]
        public string ActionConfig { get; set; }

        /// <summary>
        /// Whether the action is enabled
        /// </summary>
        public bool IsEnabled { get; set; } = true;

        /// <summary>
        /// Workflow ID (optional - for creating trigger mapping)
        /// </summary>
        public long? WorkflowId { get; set; }

        /// <summary>
        /// Trigger source ID (optional - for creating trigger mapping)
        /// </summary>
        public long? TriggerSourceId { get; set; }

        /// <summary>
        /// Trigger type (optional - for creating trigger mapping)
        /// </summary>
        public TriggerTypeEnum? TriggerType { get; set; }

        public bool IsTools { get; set; } = false;

        /// <summary>
        /// Whether this action was generated by AI
        /// </summary>
        public bool IsAIGenerated { get; set; } = false;

        /// <summary>
        /// Action trigger type scope (Stage, Task, Question, Workflow)
        /// Defines where this action can be used or triggered
        /// </summary>
        public string ActionTriggerType { get; set; }
    }
}